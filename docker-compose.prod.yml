services:
  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=ct5_db
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres_password}
      - JWT_SECRET=${JWT_SECRET:-change_this_in_production}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY:-}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY:-}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY:-}
      - DEFAULT_EXCHANGE=binance
      - TRADING_MODE=paper
      - MAX_TRADE_AMOUNT=100
      - RISK_LEVEL=medium
      - MIN_MARKET_CONDITION_SCORE=60
      - MARKET_CHECK_INTERVAL=300
      - AUTO_RESUME_THRESHOLD=75
      - RSS_UPDATE_INTERVAL=1800
      - MAX_RSS_ITEMS=50
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - BASE_URL=${BASE_URL:-http://localhost:3000}
      - SMTP_SERVER=${SMTP_SERVER:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - EMAIL_FROM=${EMAIL_FROM:-noreply@ct5platform.com}
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend
      args:
        - NODE_ENV=production
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    depends_on:
      backend:
        condition: service_healthy
    restart: always

  # Postgres service
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=ct5_db
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

volumes:
  postgres_data:
