version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=ct5_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - OPENAI_API_KEY=your_openai_api_key
      - CLAUDE_API_KEY=your_claude_api_key
      - GEMINI_API_KEY=your_gemini_api_key
      - OPENROUTER_API_KEY=your_openrouter_api_key
      - DEEPSEEK_API_KEY=your_deepseek_api_key
      - DEFAULT_EXCHANGE=binance
      - TRADING_MODE=paper
      - MAX_TRADE_AMOUNT=100
      - RISK_LEVEL=medium
      - MIN_MARKET_CONDITION_SCORE=60
      - MARKET_CHECK_INTERVAL=300
      - AUTO_RESUME_THRESHOLD=75
      - RSS_UPDATE_INTERVAL=1800
      - MAX_RSS_ITEMS=50
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - postgres
    restart: unless-stopped

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    restart: unless-stopped

  # Database service
  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ct5_db
    restart: unless-stopped

volumes:
  postgres_data:
